@model IEnumerable<mstartTask.Models.User>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/admin.cshtml";
}

<h2>Users</h2>
<form method="get">
    <p> Search By</p>
    <select required name="value">
        <option></option>
        <option value="id">id</option>
        <option value="name">name</option>
        <option value="email">email</option>
    </select>
    <input type="text" required name="search" />
    <button type="submit" class="btn btn-primary">Search</button>
</form>
<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</p>
<table class="table">
    <tr>
        <th>
            Server Date
        </th>
        <th>
            Date UTC
        </th>
        <th>
            Update Date UTC
        </th>
        <th>
            User Name
        </th>
        <th>
            Email
        </th>
        <th>
            First Name
        </th>
        <th>
            Last Name
        </th>
        <th>
            Status
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            Date Of Birth
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Server_DateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateTime_UTC)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Update_DateTime_UTC)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Username)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.First_Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Last_Name)
        </td>
        <td>
            @if (item.Status == 0)
            {
                <label class="badge badge-complete" style="background-color: #28a745; height: 30px; display: grid; align-items: center; color: white; ">Accepted</label>
            }
            else if (item.Status == 1)
            {
        <span class="badge badge-complete" style="background-color: #dc3545; height: 30px; display: grid; align-items: center;color:white; ">Pending</span>
            }
            else
            { <span class="badge badge-pending" style="background-color: orange; height: 30px; display: grid; align-items: center; color: white; "> Deleted</span>}

        </td>
        <td>
             @Enum.GetName(typeof(mstartTask.Models.Gender), item.Gender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date_Of_Birth)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }, new { @class = "btn btn-warning" }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }, new { @class = "btn btn-primary" }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID }, new { @class = "btn btn-danger" })
        </td>
    </tr>
}

</table>
