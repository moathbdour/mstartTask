@model mstartTask.Models.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/admin.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.DateTime_UTC)
    @Html.HiddenFor(model => model.Server_DateTime)


    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <label for="Status">Status:</label>
        <select required class="form-control" id="Status" name="Status">
            @if (Model.Status == 0)
            {
                <option selected value="0">Accept</option>
                <option value="1">pending</option>
                <option value="2">Delete</option>
            }
            else if (Model.Status == 1)
            {
                <option value="0">Accept</option>
                <option selected value="1">pending</option>
                <option value="2">Delete</option>
            }
            else
            {
                <option value="0">Accept</option>
                <option value="1">pending</option>
                <option selected value="2">Delete</option>
            }

        </select>
    </div>


    <div class="form-group">
        <label for="Gender">Gender:</label>
        <select class="form-control" id="Gender" name="Gender">
            @if (Model.Gender == 0)
            {
                <option selected value="0">Female</option>
                <option value="1">Male</option>
            }
            else
            {
                <option value="0">Female</option>
                <option selected value="1">Male</option>
            }

        </select>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date_Of_Birth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Date_Of_Birth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })

            @Html.ValidationMessageFor(model => model.Date_Of_Birth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
            <input type="submit" value="Save and continue" name="continues" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
